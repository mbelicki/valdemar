-- this is the first code ever written and compiled in valdemar

fn sq (a double_t) -> double_t {
    ret a * a
}

fn add_sq (a double_t, b double_t) -> double_t {
    ret sq(a) + sq(b)
}

fn inc (a double_t) -> double_t {
    ret a + 1.0
}

ext_c sin (a double_t) -> double_t

fn cos_sq (a double_t) -> double_t {
    ret 1.0 - sq(sin(a))
}

fn locals() -> double_t {
    val pi double_t = 3.14
    val a double_t = cos_sq(pi)
    ret a * pi * 2.0
}

ext_c print_float (a double_t) -> unit_t

fn side_effects(a double_t) -> unit_t {
    print_float(a)
}

fn booleans(a bool_t, b bool_t) -> bool_t {
    ret a | b & b
}

-- fn branching () -> unit_t {
--     val a int_t = get_a()
--     val b double_t = cast a double_t
--     val c double_t = a as double_t 
--     val d double_t = double_t(a)
--     val e double_t = double_t <- a
-- 
--     if a > 0 print("positive")
-- 
--     if a == 0 {
--         print("not sure if this is a good idea")
--     } elseif a > 0 {
--         print("otherwise")
--     }
-- }

