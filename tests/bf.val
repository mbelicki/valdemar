-- a simple brainfuck interpreter in valdemar
ext_c print_char (c byte_t) -> unit_t
ext_c get_char () -> byte_t

fn interpret (prog str_t) -> unit_t {
    val !tape ^[byte_t] = "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    val !tape_index int_t = 0

    val !loop int_t = 0

    val !i = 0 while i < #prog; i = i + 1 {
        val c byte_t = prog[i]
        if c == '>' {
            tape_index = tape_index + 1
        }
        if c == '<' {
            tape_index = tape_index - 1
        }
        if c == '+' {
            tape[tape_index] = tape[tape_index] + '\1'
        }
        if c == '-' {
            tape[tape_index] = tape[tape_index] - '\1'
        }
        if c == '.' {
            print_char(tape[tape_index])
        }
        if c == ',' {
            tape[tape_index] = get_char()
        }
        if c == '[' {
            -- do nothing, weeee
        }
        if c == ']' {
            loop = 1
            while (loop > 0) & (tape[tape_index] > '\0') {
                i = i - 1
                val cc byte_t = prog[i]
                if cc == '[' {
                    loop = loop - 1
                }
                if cc == ']' {
                    loop = loop + 1
                }
            }
        }
    }
}

fn main () -> unit_t {
    interpret("++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.")
}
